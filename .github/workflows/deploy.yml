name: deploy
on:
  push:
    branches:
      - develop
      - main

jobs:
  get-vercel-args:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get vercel staging args (develop)
        if: ${{ env.BRANCH_NAME }} == 'develop'
        shell: bash
        run: echo "VERCEL_ARGS=$(echo --build-env NEXT_PUBLIC_CONTENTFUL_ENVIRONMENT=test --build-env NEXT_PUBLIC_CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }} --build-env NEXT_PUBLIC_CONTENTFUL_CDA_KEY=${{ secrets.NEXT_PUBLIC_CONTENTFUL_TEST_CDA_KEY }}" >> $GITHUB_ENV

      - name: Get vercel production args (main)
        if: ${{ env.BRANCH_NAME }} == 'develop'
        shell: bash
        run: echo "VERCEL_ARGS=$(echo --prod --build-env NEXT_PUBLIC_CONTENTFUL_ENVIRONMENT=test --build-env NEXT_PUBLIC_CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }} --build-env NEXT_PUBLIC_CONTENTFUL_CDA_KEY=${{ secrets.NEXT_PUBLIC_CONTENTFUL_TEST_CDA_KEY }}" >> $GITHUB_ENV
        # run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Debug
        run: echo ${{ env.VERCEL_ARGS }}
  deploy:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          scope: varmex
          # github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-args: "--prod --build-env NEXT_PUBLIC_CONTENTFUL_ENVIRONMENT=test --build-env NEXT_PUBLIC_CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }} --build-env NEXT_PUBLIC_CONTENTFUL_CDA_KEY=${{ secrets.NEXT_PUBLIC_CONTENTFUL_TEST_CDA_KEY }}"
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 
          working-directory: ./
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: '#_bots'
        if: always()
